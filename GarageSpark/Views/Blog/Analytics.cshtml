@model BlogAnalyticsViewModel
@{
    ViewData["Title"] = "Blog Analytics";
}

<div class="container-fluid">
    <!-- Header Section -->
    <div class="row mb-4">
        <div class="col-12">
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item">
                        <a asp-action="Index" class="text-decoration-none">
                            <i class="bi bi-house-door"></i> Blog Posts
                        </a>
                    </li>
                    <li class="breadcrumb-item active" aria-current="page">Analytics</li>
                </ol>
            </nav>

            <div class="d-flex justify-content-between align-items-center">
                <div>
                    <h1 class="display-6 fw-bold text-primary mb-0">
                        <i class="bi bi-graph-up me-2"></i>Blog Analytics
                    </h1>
                    <p class="text-muted mb-0">Insights and statistics for your blog content</p>
                </div>

                <div>
                    <a asp-action="Index" class="btn btn-outline-primary">
                        <i class="bi bi-arrow-left me-2"></i>Back to Posts
                    </a>
                </div>
            </div>
        </div>
    </div>

    <!-- Key Metrics Cards -->
    <div class="row mb-4">
        <div class="col-md-3">
            <div class="card shadow-sm border-0 bg-primary text-white">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <h6 class="card-title mb-1 opacity-75">Total Posts</h6>
                            <h2 class="mb-0 fw-bold">@Model.TotalPosts</h2>
                        </div>
                        <i class="bi bi-file-text" style="font-size: 2.5rem; opacity: 0.7;"></i>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-md-3">
            <div class="card shadow-sm border-0 bg-success text-white">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <h6 class="card-title mb-1 opacity-75">Published</h6>
                            <h2 class="mb-0 fw-bold">@Model.PublishedPosts</h2>
                            <small class="opacity-75">
                                @(Model.TotalPosts > 0 ? Math.Round((double)Model.PublishedPosts / Model.TotalPosts *
                                                                100, 1) : 0)%
                            </small>
                        </div>
                        <i class="bi bi-check-circle" style="font-size: 2.5rem; opacity: 0.7;"></i>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-md-3">
            <div class="card shadow-sm border-0 bg-warning text-dark">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <h6 class="card-title mb-1 opacity-75">Drafts</h6>
                            <h2 class="mb-0 fw-bold">@Model.DraftPosts</h2>
                            <small class="opacity-75">
                                @(Model.TotalPosts > 0 ? Math.Round((double)Model.DraftPosts / Model.TotalPosts * 100,
                                                                1) : 0)%
                            </small>
                        </div>
                        <i class="bi bi-pencil" style="font-size: 2.5rem; opacity: 0.7;"></i>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-md-3">
            <div class="card shadow-sm border-0 bg-info text-white">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <h6 class="card-title mb-1 opacity-75">Total Words</h6>
                            <h2 class="mb-0 fw-bold">@Model.TotalWords.ToString("N0")</h2>
                            <small class="opacity-75">
                                Avg: @(Model.TotalPosts > 0 ? (Model.TotalWords / Model.TotalPosts).ToString("N0") :
                                                                "0")
                            </small>
                        </div>
                        <i class="bi bi-file-text" style="font-size: 2.5rem; opacity: 0.7;"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <!-- Content Analytics -->
        <div class="col-lg-8">
            <!-- Publishing Activity -->
            <div class="card shadow-sm mb-4">
                <div class="card-header bg-primary text-white">
                    <h5 class="card-title mb-0">
                        <i class="bi bi-calendar-check me-2"></i>Publishing Activity
                    </h5>
                </div>
                <div class="card-body">
                    @if (Model.MonthlyPostCounts.Any())
                    {
                        <div class="row">
                            @foreach (var month in Model.MonthlyPostCounts.Take(6))
                            {
                                <div class="col-md-2 col-sm-4 mb-3">
                                    <div class="text-center">
                                        <div class="h4 text-primary mb-1">@month.PostCount</div>
                                        <small class="text-muted">@month.MonthYear</small>
                                    </div>
                                </div>
                            }
                        </div>

                        <!-- Simple bar chart visualization -->
                        <div class="mt-3">
                            <div class="d-flex align-items-end" style="height: 120px;">
                                @{
                                    var maxCount = Model.MonthlyPostCounts.Max(x => x.PostCount);
                                }
                                @foreach (var month in Model.MonthlyPostCounts.Take(12))
                                {
                                    var height = maxCount > 0 ? (month.PostCount * 100 / maxCount) : 0;
                                    <div class="flex-fill text-center me-1">
                                        <div class="bg-primary rounded-top" style="height: @(height)%; min-height: 2px;"
                                            title="@month.MonthYear: @month.PostCount posts"></div>
                                        <small class="text-muted mt-1 d-block" style="font-size: 0.7em;">
                                            @month.MonthYear.Substring(0, 3)
                                        </small>
                                    </div>
                                }
                            </div>
                        </div>
                    }
                    else
                    {
                        <div class="text-center py-4">
                            <i class="bi bi-calendar-x text-muted mb-3" style="font-size: 3rem;"></i>
                            <p class="text-muted">No publishing activity data available</p>
                        </div>
                    }
                </div>
            </div>

            <!-- Top Posts by Word Count -->
            <div class="card shadow-sm mb-4">
                <div class="card-header bg-success text-white">
                    <h5 class="card-title mb-0">
                        <i class="bi bi-file-text me-2"></i>Longest Posts
                    </h5>
                </div>
                <div class="card-body">
                    @if (Model.TopPostsByLength.Any())
                    {
                        <div class="list-group list-group-flush">
                            @foreach (var post in Model.TopPostsByLength.Take(5))
                            {
                                <div class="list-group-item d-flex justify-content-between align-items-center px-0">
                                    <div class="flex-grow-1">
                                        <h6 class="mb-1">
                                            <a asp-action="Details" asp-route-id="@post.Id" class="text-decoration-none">
                                                @post.Title
                                            </a>
                                        </h6>
                                        <small class="text-muted">
                                            @if (post.IsPublished)
                                            {
                                                <i class="bi bi-check-circle text-success me-1"></i>
                                            }
                                            else
                                            {
                                                <i class="bi bi-pencil text-warning me-1"></i>
                                            }
                                            @post.CreatedAt.ToString("MMM dd, yyyy")
                                        </small>
                                    </div>
                                    <div class="text-end">
                                        <span class="badge bg-primary">@post.WordCount words</span>
                                        <div class="small text-muted">@post.ReadingTimeMinutes min read</div>
                                    </div>
                                </div>
                            }
                        </div>
                    }
                    else
                    {
                        <div class="text-center py-4">
                            <i class="bi bi-file-text text-muted mb-3" style="font-size: 3rem;"></i>
                            <p class="text-muted">No posts available</p>
                        </div>
                    }
                </div>
            </div>

            <!-- Recent Activity -->
            <div class="card shadow-sm">
                <div class="card-header bg-info text-white">
                    <h5 class="card-title mb-0">
                        <i class="bi bi-clock-history me-2"></i>Recent Activity
                    </h5>
                </div>
                <div class="card-body">
                    @if (Model.RecentPosts.Any())
                    {
                        <div class="list-group list-group-flush">
                            @foreach (var post in Model.RecentPosts.Take(5))
                            {
                                <div class="list-group-item d-flex justify-content-between align-items-center px-0">
                                    <div class="flex-grow-1">
                                        <h6 class="mb-1">
                                            <a asp-action="Details" asp-route-id="@post.Id" class="text-decoration-none">
                                                @post.Title
                                            </a>
                                        </h6>
                                        <small class="text-muted">
                                            @if (post.IsPublished)
                                            {
                                                @Html.Raw("<i class=\"bi bi-check-circle text-success me-1\"></i>Published")
                                            }
                                            else
                                            {
                                                @Html.Raw("<i class=\"bi bi-pencil text-warning me-1\"></i>Draft")
                                            }
                                            • @post.UpdatedAt.ToString("MMM dd, yyyy HH:mm")
                                        </small>
                                    </div>
                                    <div class="text-end">
                                        <div class="btn-group btn-group-sm">
                                            <a asp-action="Details" asp-route-id="@post.Id"
                                                class="btn btn-outline-primary btn-sm">
                                                <i class="bi bi-eye"></i>
                                            </a>
                                            <a asp-action="Edit" asp-route-id="@post.Id"
                                                class="btn btn-outline-secondary btn-sm">
                                                <i class="bi bi-pencil"></i>
                                            </a>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    }
                    else
                    {
                        <div class="text-center py-4">
                            <i class="bi bi-clock-history text-muted mb-3" style="font-size: 3rem;"></i>
                            <p class="text-muted">No recent activity</p>
                        </div>
                    }
                </div>
            </div>
        </div>

        <!-- Sidebar Analytics -->
        <div class="col-lg-4">
            <!-- Tag Cloud -->
            <div class="card shadow-sm mb-4">
                <div class="card-header bg-secondary text-white">
                    <h5 class="card-title mb-0">
                        <i class="bi bi-tags me-2"></i>Popular Tags
                    </h5>
                </div>
                <div class="card-body">
                    @if (Model.TagStats.Any())
                    {
                        <div class="tag-cloud">
                            @foreach (var tag in Model.TagStats.Take(15))
                            {
                                <span class="badge bg-secondary me-1 mb-1"
                                    style="font-size: @(Math.Max(0.8, Math.Min(1.5, (double)tag.UsageCount / Model.TagStats.Max(x => x.UsageCount) * 1.2 + 0.8)))em;"
                                    title="@tag.UsageCount posts">
                                    #@tag.TagName
                                </span>
                            }
                        </div>

                        <hr>

                        <div class="small">
                            @foreach (var tag in Model.TagStats.Take(5))
                            {
                                <div class="d-flex justify-content-between mb-1">
                                    <span>#@tag.TagName</span>
                                    <span class="text-muted">@tag.UsageCount posts</span>
                                </div>
                            }
                        </div>
                    }
                    else
                    {
                        <div class="text-center py-3">
                            <i class="bi bi-tags text-muted mb-2" style="font-size: 2rem;"></i>
                            <p class="text-muted mb-0">No tags used yet</p>
                        </div>
                    }
                </div>
            </div>

            <!-- Content Quality Metrics -->
            <div class="card shadow-sm mb-4">
                <div class="card-header bg-warning text-dark">
                    <h5 class="card-title mb-0">
                        <i class="bi bi-bar-chart me-2"></i>Content Metrics
                    </h5>
                </div>
                <div class="card-body">
                    <div class="row g-3 text-center">
                        <div class="col-6">
                            <div class="h5 text-primary mb-0">@Model.AverageWordsPerPost.ToString("N0")</div>
                            <small class="text-muted">Avg Words</small>
                        </div>
                        <div class="col-6">
                            <div class="h5 text-info mb-0">@Model.AverageReadingTime.ToString("N1")</div>
                            <small class="text-muted">Avg Read Time</small>
                        </div>
                    </div>

                    <hr>

                    <div class="small">
                        <div class="d-flex justify-content-between mb-2">
                            <span class="text-muted">Posts with Excerpts:</span>
                            <span>@Model.PostsWithExcerpts (@(Model.TotalPosts > 0 ?
                                                                Math.Round((double)Model.PostsWithExcerpts / Model.TotalPosts * 100, 1) : 0)%)</span>
                        </div>

                        <div class="d-flex justify-content-between mb-2">
                            <span class="text-muted">Posts with Cover Images:</span>
                            <span>@Model.PostsWithImages (@(Model.TotalPosts > 0 ?
                                                                Math.Round((double)Model.PostsWithImages / Model.TotalPosts * 100, 1) : 0)%)</span>
                        </div>

                        <div class="d-flex justify-content-between">
                            <span class="text-muted">Posts with SEO:</span>
                            <span>@Model.PostsWithSEO (@(Model.TotalPosts > 0 ? Math.Round((double)Model.PostsWithSEO /
                                                                Model.TotalPosts * 100, 1) : 0)%)</span>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Quick Actions -->
            <div class="card shadow-sm mb-4">
                <div class="card-header bg-dark text-white">
                    <h5 class="card-title mb-0">
                        <i class="bi bi-lightning me-2"></i>Quick Actions
                    </h5>
                </div>
                <div class="card-body">
                    <div class="d-grid gap-2">
                        <a asp-action="Create" class="btn btn-primary">
                            <i class="bi bi-plus-circle me-2"></i>Create New Post
                        </a>

                        <a asp-action="Index" asp-route-status="Draft" class="btn btn-outline-warning">
                            <i class="bi bi-pencil me-2"></i>Review Drafts (@Model.DraftPosts)
                        </a>

                        <a asp-action="Index" asp-route-status="Published" class="btn btn-outline-success">
                            <i class="bi bi-check-circle me-2"></i>View Published (@Model.PublishedPosts)
                        </a>
                    </div>
                </div>
            </div>

            <!-- Export Options -->
            <div class="card shadow-sm">
                <div class="card-header bg-success text-white">
                    <h5 class="card-title mb-0">
                        <i class="bi bi-download me-2"></i>Export Data
                    </h5>
                </div>
                <div class="card-body">
                    <p class="small text-muted mb-3">Export your blog data for backup or analysis</p>
                    <div class="d-grid gap-2">
                        <button type="button" class="btn btn-outline-primary btn-sm" onclick="exportAnalytics('csv')">
                            <i class="bi bi-file-earmark-spreadsheet me-2"></i>Export as CSV
                        </button>

                        <button type="button" class="btn btn-outline-info btn-sm" onclick="exportAnalytics('json')">
                            <i class="bi bi-file-earmark-code me-2"></i>Export as JSON
                        </button>

                        <button type="button" class="btn btn-outline-secondary btn-sm" onclick="printAnalytics()">
                            <i class="bi bi-printer me-2"></i>Print Report
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function exportAnalytics(format)
        {
            // This would typically make an AJAX call to export data
            alert(`Export as ${format.toUpperCase()} functionality would be implemented here.`);
        }

        function printAnalytics()
        {
            window.print();
        }

        // Refresh data periodically (optional)
        $(document).ready(function ()
        {
            // Auto-refresh every 5 minutes (optional)
            // setInterval(function() {
            //     location.reload();
            // }, 300000);
        });
    </script>
}

<style>
    .tag-cloud .badge {
        transition: all 0.2s ease;
    }

    .tag-cloud .badge:hover {
        transform: scale(1.1);
        opacity: 0.8;
    }

    @@media print {

        .btn,
        .card-header {
            -webkit-print-color-adjust: exact;
        }

        .no-print {
            display: none !important;
        }
    }
</style>
