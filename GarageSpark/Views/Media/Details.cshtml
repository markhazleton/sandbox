@model MediaFileViewModel
@{
    ViewData["Title"] = $"Media Details - {Model.FileName}";
}

<div class="d-flex align-items-center mb-4">
    <a asp-action="Index" class="btn btn-outline-secondary me-3">
        <i class="bi bi-arrow-left"></i>
    </a>
    <div class="flex-grow-1">
        <h1><i class="bi bi-info-circle text-primary"></i> Media Details</h1>
        <p class="text-muted mb-0">@Model.FileName</p>
    </div>
    <div class="btn-group">
        <a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-outline-primary">
            <i class="bi bi-pencil"></i> Edit
        </a>
        <button type="button" class="btn btn-outline-danger" data-bs-toggle="modal" data-bs-target="#deleteModal">
            <i class="bi bi-trash"></i> Delete
        </button>
    </div>
</div>

<div class="row">
    <!-- Media Preview -->
    <div class="col-lg-8">
        <div class="card">
            @if (Model.IsImage)
            {
                <div class="text-center p-3">
                    <img src="@Model.Url" class="img-fluid rounded" alt="@Model.Alt" style="max-height: 600px;" />
                </div>
            }
            else if (Model.IsVideo)
            {
                <div class="text-center p-3">
                    <video controls class="img-fluid rounded" style="max-height: 600px;">
                        <source src="@Model.Url" type="@Model.ContentType">
                        Your browser does not support the video tag.
                    </video>
                </div>
            }
            else
            {
                <div class="text-center p-5">
                    <i class="bi bi-file-earmark display-1 text-muted"></i>
                    <h4 class="mt-3">@Model.FileName</h4>
                    <p class="text-muted">@Model.ContentType</p>
                    <a href="@Model.Url" class="btn btn-primary" target="_blank">
                        <i class="bi bi-download"></i> Download File
                    </a>
                </div>
            }
            
            @if (Model.IsImage || Model.IsVideo)
            {
                <div class="card-footer bg-transparent">
                    <div class="d-flex justify-content-between align-items-center">
                        <div class="btn-group" role="group">
                            <a href="@Model.Url" class="btn btn-outline-primary" target="_blank">
                                <i class="bi bi-eye"></i> View Full Size
                            </a>
                            <a href="@Model.Url" class="btn btn-outline-secondary" download="@Model.FileName">
                                <i class="bi bi-download"></i> Download
                            </a>
                            <button class="btn btn-outline-info" onclick="copyToClipboard('@Model.Url')">
                                <i class="bi bi-clipboard"></i> Copy URL
                            </button>
                        </div>
                        @if (Model.Width.HasValue && Model.Height.HasValue)
                        {
                            <small class="text-muted">@Model.Dimensions</small>
                        }
                    </div>
                </div>
            }
        </div>
    </div>

    <!-- Media Information -->
    <div class="col-lg-4">
        <!-- Basic Information -->
        <div class="card mb-3">
            <div class="card-header">
                <h6 class="mb-0"><i class="bi bi-info-circle"></i> File Information</h6>
            </div>
            <div class="card-body">
                <table class="table table-sm table-borderless">
                    <tr>
                        <td class="text-muted">Filename:</td>
                        <td>@Model.FileName</td>
                    </tr>
                    @if (!string.IsNullOrEmpty(Model.OriginalFileName) && Model.OriginalFileName != Model.FileName)
                    {
                        <tr>
                            <td class="text-muted">Original Name:</td>
                            <td>@Model.OriginalFileName</td>
                        </tr>
                    }
                    <tr>
                        <td class="text-muted">File Size:</td>
                        <td>@Model.FormattedFileSize</td>
                    </tr>
                    <tr>
                        <td class="text-muted">Content Type:</td>
                        <td><code>@Model.ContentType</code></td>
                    </tr>
                    @if (Model.Width.HasValue && Model.Height.HasValue)
                    {
                        <tr>
                            <td class="text-muted">Dimensions:</td>
                            <td>@Model.Dimensions</td>
                        </tr>
                    }
                    <tr>
                        <td class="text-muted">Source:</td>
                        <td>
                            @if (Model.Source == MediaSource.Local)
                            {
                                <span class="badge bg-success">
                                    <i class="bi bi-hdd"></i> Local
                                </span>
                            }
                            else if (Model.Source == MediaSource.Unsplash)
                            {
                                <span class="badge bg-info">
                                    <i class="bi bi-cloud"></i> Unsplash
                                </span>
                            }
                            else
                            {
                                <span class="badge bg-secondary">
                                    <i class="bi bi-link-45deg"></i> External
                                </span>
                            }
                        </td>
                    </tr>
                    <tr>
                        <td class="text-muted">Visibility:</td>
                        <td>
                            @if (Model.IsPublic)
                            {
                                <span class="badge bg-success">
                                    <i class="bi bi-globe"></i> Public
                                </span>
                            }
                            else
                            {
                                <span class="badge bg-warning">
                                    <i class="bi bi-lock"></i> Private
                                </span>
                            }
                        </td>
                    </tr>
                </table>
            </div>
        </div>

        <!-- Metadata -->
        @if (!string.IsNullOrEmpty(Model.Alt) || !string.IsNullOrEmpty(Model.Caption) || !string.IsNullOrEmpty(Model.Description))
        {
            <div class="card mb-3">
                <div class="card-header">
                    <h6 class="mb-0"><i class="bi bi-tags"></i> Metadata</h6>
                </div>
                <div class="card-body">
                    @if (!string.IsNullOrEmpty(Model.Alt))
                    {
                        <div class="mb-3">
                            <strong class="text-muted">Alt Text:</strong>
                            <p class="mb-0">@Model.Alt</p>
                        </div>
                    }
                    @if (!string.IsNullOrEmpty(Model.Caption))
                    {
                        <div class="mb-3">
                            <strong class="text-muted">Caption:</strong>
                            <p class="mb-0">@Model.Caption</p>
                        </div>
                    }
                    @if (!string.IsNullOrEmpty(Model.Description))
                    {
                        <div class="mb-0">
                            <strong class="text-muted">Description:</strong>
                            <p class="mb-0">@Model.Description</p>
                        </div>
                    }
                </div>
            </div>
        }

        <!-- External Source Information -->
        @if (Model.Source != MediaSource.Local && (!string.IsNullOrEmpty(Model.ExternalAuthor) || !string.IsNullOrEmpty(Model.ExternalSource)))
        {
            <div class="card mb-3">
                <div class="card-header">
                    <h6 class="mb-0"><i class="bi bi-link-45deg"></i> Source Information</h6>
                </div>
                <div class="card-body">
                    @if (!string.IsNullOrEmpty(Model.ExternalAuthor))
                    {
                        <div class="mb-2">
                            <strong class="text-muted">Author:</strong>
                            @if (!string.IsNullOrEmpty(Model.ExternalAuthorUrl))
                            {
                                <a href="@Model.ExternalAuthorUrl" target="_blank" class="text-decoration-none">@Model.ExternalAuthor</a>
                            }
                            else
                            {
                                <span>@Model.ExternalAuthor</span>
                            }
                        </div>
                    }
                    @if (!string.IsNullOrEmpty(Model.ExternalSource))
                    {
                        <div class="mb-2">
                            <strong class="text-muted">Source:</strong>
                            <span>@Model.ExternalSource</span>
                        </div>
                    }
                    @if (!string.IsNullOrEmpty(Model.ExternalUrl))
                    {
                        <div class="mb-0">
                            <a href="@Model.ExternalUrl" target="_blank" class="btn btn-sm btn-outline-primary">
                                <i class="bi bi-box-arrow-up-right"></i> View Original
                            </a>
                        </div>
                    }
                </div>
            </div>
        }

        <!-- Timestamps -->
        <div class="card">
            <div class="card-header">
                <h6 class="mb-0"><i class="bi bi-clock"></i> Timestamps</h6>
            </div>
            <div class="card-body">
                <table class="table table-sm table-borderless">
                    <tr>
                        <td class="text-muted">Created:</td>
                        <td>@Model.CreatedAt.ToString("MMM dd, yyyy HH:mm")</td>
                    </tr>
                    @if (Model.UpdatedAt != Model.CreatedAt)
                    {
                        <tr>
                            <td class="text-muted">Modified:</td>
                            <td>@Model.UpdatedAt.ToString("MMM dd, yyyy HH:mm")</td>
                        </tr>
                    }
                    @if (!string.IsNullOrEmpty(Model.CreatedBy))
                    {
                        <tr>
                            <td class="text-muted">Uploaded by:</td>
                            <td>@Model.CreatedBy</td>
                        </tr>
                    }
                </table>
            </div>
        </div>
    </div>
</div>

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">
                    <i class="bi bi-exclamation-triangle text-warning"></i> Confirm Delete
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to delete <strong>@Model.FileName</strong>?</p>
                <p class="text-muted small">This action cannot be undone. The file will be permanently removed from your media library.</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <form asp-action="Delete" asp-route-id="@Model.Id" method="post" class="d-inline">
                    @Html.AntiForgeryToken()
                    <button type="submit" class="btn btn-danger">
                        <i class="bi bi-trash"></i> Delete File
                    </button>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function copyToClipboard(text) {
            navigator.clipboard.writeText(text).then(function() {
                showToast('URL copied to clipboard!', 'success');
            }).catch(function(err) {
                console.error('Could not copy text: ', err);
                showToast('Failed to copy URL', 'danger');
            });
        }

        function showToast(message, type) {
            const toast = document.createElement('div');
            toast.className = `alert alert-${type} position-fixed top-0 end-0 m-3`;
            toast.style.zIndex = '1050';
            toast.innerHTML = `
                ${message}
                <button type="button" class="btn-close" onclick="this.parentElement.remove()"></button>
            `;
            document.body.appendChild(toast);
            
            setTimeout(() => {
                if (toast.parentElement) {
                    toast.remove();
                }
            }, 3000);
        }
    </script>
}
