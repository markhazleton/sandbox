@model MediaFileViewModel
@{
    ViewData["Title"] = $"Edit Media - {Model.FileName}";
}

<div class="row justify-content-center">
    <div class="col-md-10">
        <div class="d-flex align-items-center mb-4">
            <a asp-action="Details" asp-route-id="@Model.Id" class="btn btn-outline-secondary me-3">
                <i class="bi bi-arrow-left"></i>
            </a>
            <div>
                <h1><i class="bi bi-pencil text-primary"></i> Edit Media</h1>
                <p class="text-muted mb-0">@Model.FileName</p>
            </div>
        </div>

        @if (!ViewData.ModelState.IsValid)
        {
            <div class="alert alert-danger">
                <h6><i class="bi bi-exclamation-triangle"></i> Please fix the following errors:</h6>
                <div asp-validation-summary="All" class="mb-0"></div>
            </div>
        }

        <div class="row">
            <!-- Media Preview -->
            <div class="col-md-6">
                <div class="card">
                    <div class="card-header">
                        <h6 class="mb-0"><i class="bi bi-eye"></i> Preview</h6>
                    </div>
                    @if (Model.IsImage)
                    {
                        <div class="text-center p-3">
                            <img src="@Model.Url" class="img-fluid rounded" alt="@Model.Alt" style="max-height: 400px;" />
                        </div>
                    }
                    else if (Model.IsVideo)
                    {
                        <div class="text-center p-3">
                            <video controls class="img-fluid rounded" style="max-height: 400px;">
                                <source src="@Model.Url" type="@Model.ContentType">
                                Your browser does not support the video tag.
                            </video>
                        </div>
                    }
                    else
                    {
                        <div class="text-center p-4">
                            <i class="bi bi-file-earmark display-1 text-muted"></i>
                            <h5 class="mt-3">@Model.FileName</h5>
                            <p class="text-muted">@Model.ContentType</p>
                        </div>
                    }
                    
                    <div class="card-footer bg-transparent">
                        <div class="row text-center">
                            <div class="col-4">
                                <div class="text-muted small">Size</div>
                                <div>@Model.FormattedFileSize</div>
                            </div>
                            @if (Model.Width.HasValue && Model.Height.HasValue)
                            {
                                <div class="col-4">
                                    <div class="text-muted small">Dimensions</div>
                                    <div>@Model.Dimensions</div>
                                </div>
                            }
                            <div class="col-4">
                                <div class="text-muted small">Source</div>
                                <div>
                                    @if (Model.Source == MediaSource.Local)
                                    {
                                        <span class="badge bg-success">Local</span>
                                    }
                                    else if (Model.Source == MediaSource.Unsplash)
                                    {
                                        <span class="badge bg-info">Unsplash</span>
                                    }
                                    else
                                    {
                                        <span class="badge bg-secondary">External</span>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Edit Form -->
            <div class="col-md-6">
                <div class="card">
                    <div class="card-header">
                        <h6 class="mb-0"><i class="bi bi-pencil"></i> Edit Information</h6>
                    </div>
                    <div class="card-body">
                        <form asp-action="Edit" method="post">
                            @Html.AntiForgeryToken()
                            <input asp-for="Id" type="hidden" />
                            <input asp-for="FileName" type="hidden" />
                            <input asp-for="OriginalFileName" type="hidden" />
                            <input asp-for="Url" type="hidden" />
                            <input asp-for="ContentType" type="hidden" />
                            <input asp-for="FileSize" type="hidden" />
                            <input asp-for="Width" type="hidden" />
                            <input asp-for="Height" type="hidden" />
                            <input asp-for="Source" type="hidden" />
                            <input asp-for="ExternalId" type="hidden" />
                            <input asp-for="ExternalUrl" type="hidden" />
                            <input asp-for="ExternalAuthor" type="hidden" />
                            <input asp-for="ExternalAuthorUrl" type="hidden" />
                            <input asp-for="ExternalSource" type="hidden" />
                            <input asp-for="CreatedAt" type="hidden" />
                            <input asp-for="CreatedBy" type="hidden" />

                            <!-- Alt Text -->
                            <div class="mb-3">
                                <label asp-for="Alt" class="form-label">
                                    <i class="bi bi-text-left"></i> Alt Text
                                </label>
                                <input asp-for="Alt" class="form-control" placeholder="Describe the image for accessibility..." />
                                <span asp-validation-for="Alt" class="text-danger"></span>
                                <div class="form-text">
                                    <i class="bi bi-universal-access"></i>
                                    Alt text helps screen readers and improves SEO. Describe what the image shows.
                                </div>
                            </div>

                            <!-- Caption -->
                            <div class="mb-3">
                                <label asp-for="Caption" class="form-label">
                                    <i class="bi bi-chat-text"></i> Caption
                                </label>
                                <input asp-for="Caption" class="form-control" placeholder="Optional caption for the media..." />
                                <span asp-validation-for="Caption" class="text-danger"></span>
                                <div class="form-text">
                                    <i class="bi bi-info-circle"></i>
                                    Caption will be displayed with the media when used on the site.
                                </div>
                            </div>

                            <!-- Description -->
                            <div class="mb-3">
                                <label asp-for="Description" class="form-label">
                                    <i class="bi bi-card-text"></i> Description
                                </label>
                                <textarea asp-for="Description" class="form-control" rows="3" placeholder="Detailed description of the media file..."></textarea>
                                <span asp-validation-for="Description" class="text-danger"></span>
                                <div class="form-text">
                                    <i class="bi bi-info-circle"></i>
                                    Internal description for organization and search purposes.
                                </div>
                            </div>

                            <!-- Visibility -->
                            <div class="mb-3">
                                <div class="form-check">
                                    <input asp-for="IsPublic" class="form-check-input" />
                                    <label asp-for="IsPublic" class="form-check-label">
                                        <i class="bi bi-globe"></i> Make this file public
                                    </label>
                                    <span asp-validation-for="IsPublic" class="text-danger"></span>
                                </div>
                                <div class="form-text">
                                    <i class="bi bi-info-circle"></i>
                                    Public files can be accessed directly via URL.
                                </div>
                            </div>

                            <!-- Action Buttons -->
                            <div class="d-flex justify-content-between">
                                <a asp-action="Details" asp-route-id="@Model.Id" class="btn btn-secondary">
                                    <i class="bi bi-x-circle"></i> Cancel
                                </a>
                                <button type="submit" class="btn btn-primary">
                                    <i class="bi bi-check-circle"></i> Save Changes
                                </button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>

        <!-- External Source Information (Read-only) -->
        @if (Model.Source != MediaSource.Local && (!string.IsNullOrEmpty(Model.ExternalAuthor) || !string.IsNullOrEmpty(Model.ExternalSource)))
        {
            <div class="card mt-4">
                <div class="card-header">
                    <h6 class="mb-0"><i class="bi bi-link-45deg"></i> Source Information</h6>
                </div>
                <div class="card-body">
                    <div class="row">
                        @if (!string.IsNullOrEmpty(Model.ExternalAuthor))
                        {
                            <div class="col-md-6">
                                <strong class="text-muted">Author:</strong>
                                @if (!string.IsNullOrEmpty(Model.ExternalAuthorUrl))
                                {
                                    <a href="@Model.ExternalAuthorUrl" target="_blank" class="text-decoration-none">@Model.ExternalAuthor</a>
                                }
                                else
                                {
                                    <span>@Model.ExternalAuthor</span>
                                }
                            </div>
                        }
                        @if (!string.IsNullOrEmpty(Model.ExternalSource))
                        {
                            <div class="col-md-6">
                                <strong class="text-muted">Source:</strong>
                                <span>@Model.ExternalSource</span>
                            </div>
                        }
                    </div>
                    @if (!string.IsNullOrEmpty(Model.ExternalUrl))
                    {
                        <div class="mt-3">
                            <a href="@Model.ExternalUrl" target="_blank" class="btn btn-sm btn-outline-primary">
                                <i class="bi bi-box-arrow-up-right"></i> View Original Source
                            </a>
                        </div>
                    }
                </div>
            </div>
        }

        <!-- File Information (Read-only) -->
        <div class="card mt-4">
            <div class="card-header">
                <h6 class="mb-0"><i class="bi bi-info-circle"></i> File Information</h6>
            </div>
            <div class="card-body">
                <div class="row">
                    <div class="col-md-3">
                        <strong class="text-muted">Filename:</strong><br>
                        <code>@Model.FileName</code>
                    </div>
                    <div class="col-md-3">
                        <strong class="text-muted">Content Type:</strong><br>
                        <code>@Model.ContentType</code>
                    </div>
                    <div class="col-md-3">
                        <strong class="text-muted">Created:</strong><br>
                        @Model.CreatedAt.ToString("MMM dd, yyyy")
                    </div>
                    <div class="col-md-3">
                        <strong class="text-muted">Modified:</strong><br>
                        @Model.UpdatedAt.ToString("MMM dd, yyyy")
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Auto-save draft functionality (optional)
        let saveTimeout;
        
        document.querySelectorAll('input, textarea').forEach(input => {
            if (input.type !== 'hidden') {
                input.addEventListener('input', function() {
                    clearTimeout(saveTimeout);
                    saveTimeout = setTimeout(() => {
                        // Could implement auto-save draft here
                        console.log('Auto-save triggered');
                    }, 2000);
                });
            }
        });

        // Character counter for description
        const descriptionTextarea = document.getElementById('Description');
        if (descriptionTextarea) {
            const maxLength = 1000;
            const counter = document.createElement('div');
            counter.className = 'form-text text-end';
            counter.style.marginTop = '0.25rem';
            descriptionTextarea.parentNode.appendChild(counter);

            function updateCounter() {
                const remaining = maxLength - descriptionTextarea.value.length;
                counter.textContent = `${remaining} characters remaining`;
                counter.className = remaining < 100 ? 'form-text text-end text-warning' : 'form-text text-end text-muted';
            }

            descriptionTextarea.addEventListener('input', updateCounter);
            updateCounter(); // Initial count
        }
    </script>
}
