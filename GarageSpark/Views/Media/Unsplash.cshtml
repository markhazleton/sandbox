@model MediaSearchViewModel
@{
    ViewData["Title"] = "Browse Unsplash";
}

<div class="d-flex align-items-center mb-4">
    <a asp-action="Index" class="btn btn-outline-secondary me-3">
        <i class="bi bi-arrow-left"></i>
    </a>
    <div>
        <h1><i class="bi bi-search text-primary"></i> Browse Unsplash</h1>
        <p class="text-muted mb-0">Discover and save beautiful images from Unsplash</p>
    </div>
</div>

<!-- Search Form -->
<div class="card mb-4">
    <div class="card-body">
        <form id="unsplashSearchForm" class="row g-3">
            <div class="col-md-8">
                <div class="input-group">
                    <span class="input-group-text"><i class="bi bi-search"></i></span>
                    <input type="text" id="searchTerm" class="form-control" value="@Model.SearchTerm" placeholder="Search for images... (e.g., nature, business, technology)">
                </div>
            </div>
            <div class="col-md-4">
                <div class="d-grid">
                    <button type="submit" class="btn btn-primary">
                        <i class="bi bi-search"></i> Search Unsplash
                    </button>
                </div>
            </div>
        </form>
    </div>
</div>

<!-- Loading Indicator -->
<div id="loadingIndicator" class="text-center py-5 d-none">
    <div class="spinner-border text-primary" role="status">
        <span class="visually-hidden">Searching...</span>
    </div>
    <p class="mt-3 text-muted">Searching Unsplash...</p>
</div>

<!-- Search Results -->
<div id="searchResults" class="d-none">
    <div class="d-flex justify-content-between align-items-center mb-3">
        <h5 id="resultsTitle" class="mb-0"></h5>
        <small class="text-muted">
            <i class="bi bi-info-circle"></i> 
            Photos by <a href="https://unsplash.com" target="_blank" class="text-decoration-none">Unsplash</a>
        </small>
    </div>
    
    <div id="resultsGrid" class="row g-3">
        <!-- Results will be populated by JavaScript -->
    </div>
    
    <!-- Pagination -->
    <div class="d-flex justify-content-center mt-4">
        <nav>
            <ul class="pagination" id="pagination">
                <!-- Pagination will be populated by JavaScript -->
            </ul>
        </nav>
    </div>
</div>

<!-- No Results -->
<div id="noResults" class="text-center py-5 d-none">
    <i class="bi bi-search display-1 text-muted"></i>
    <h3 class="mt-3">No images found</h3>
    <p class="text-muted mb-4">Try searching for different keywords or check your spelling.</p>
    <button class="btn btn-outline-primary" onclick="document.getElementById('searchTerm').focus()">
        <i class="bi bi-search"></i> Try Another Search
    </button>
</div>

<!-- Error Message -->
<div id="errorMessage" class="alert alert-danger d-none">
    <h6><i class="bi bi-exclamation-triangle"></i> Search Error</h6>
    <p class="mb-0">Unable to search Unsplash. Please check your internet connection and try again.</p>
</div>

<!-- Initial State -->
<div id="initialState" class="text-center py-5">
    <i class="bi bi-image display-1 text-muted"></i>
    <h3 class="mt-3">Search Unsplash</h3>
    <p class="text-muted mb-4">Enter keywords above to discover beautiful, free photos from Unsplash.</p>
    <div class="d-flex flex-wrap justify-content-center gap-2">
        <button class="btn btn-outline-primary btn-sm" onclick="searchSuggestion('nature')">Nature</button>
        <button class="btn btn-outline-primary btn-sm" onclick="searchSuggestion('business')">Business</button>
        <button class="btn btn-outline-primary btn-sm" onclick="searchSuggestion('technology')">Technology</button>
        <button class="btn btn-outline-primary btn-sm" onclick="searchSuggestion('food')">Food</button>
        <button class="btn btn-outline-primary btn-sm" onclick="searchSuggestion('travel')">Travel</button>
    </div>
</div>

<!-- Save Image Modal -->
<div class="modal fade" id="saveImageModal" tabindex="-1">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">
                    <i class="bi bi-download"></i> Save Image to Library
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-md-6">
                        <img id="modalImage" class="img-fluid rounded" />
                    </div>
                    <div class="col-md-6">
                        <form id="saveImageForm">
                            <input type="hidden" id="photoId" />
                            
                            <div class="mb-3">
                                <label class="form-label">
                                    <i class="bi bi-text-left"></i> Title (Optional)
                                </label>
                                <input type="text" id="imageTitle" class="form-control" placeholder="Custom title for this image">
                            </div>
                            
                            <div class="mb-3">
                                <label class="form-label">
                                    <i class="bi bi-card-text"></i> Description (Optional)
                                </label>
                                <textarea id="imageDescription" class="form-control" rows="3" placeholder="Custom description for this image"></textarea>
                            </div>
                            
                            <div class="mb-3">
                                <h6><i class="bi bi-person"></i> Photo by</h6>
                                <p id="photographerInfo" class="text-muted small mb-0"></p>
                            </div>
                            
                            <div class="mb-3">
                                <h6><i class="bi bi-info-circle"></i> Image Details</h6>
                                <p id="imageDetails" class="text-muted small mb-0"></p>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" id="saveImageBtn" class="btn btn-primary">
                    <i class="bi bi-download"></i> Save to Library
                </button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        let currentPage = 1;
        let currentQuery = '';
        let totalPages = 0;

        // Search form submission
        document.getElementById('unsplashSearchForm').addEventListener('submit', function(e) {
            e.preventDefault();
            const query = document.getElementById('searchTerm').value.trim();
            if (query) {
                searchUnsplash(query, 1);
            }
        });

        // Search function
        async function searchUnsplash(query, page = 1) {
            currentQuery = query;
            currentPage = page;
            
            // Show loading
            showElement('loadingIndicator');
            hideElements(['searchResults', 'noResults', 'errorMessage', 'initialState']);
            
            try {
                const response = await fetch('@Url.Action("SearchUnsplash")', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                    },
                    body: JSON.stringify({
                        SearchTerm: query,
                        Page: page,
                        PageSize: 30
                    })
                });
                
                const result = await response.json();
                
                if (result.success && result.data) {
                    displayResults(result.data);
                } else {
                    showNoResults();
                }
            } catch (error) {
                console.error('Search error:', error);
                showError();
            } finally {
                hideElement('loadingIndicator');
            }
        }

        // Display search results
        function displayResults(data) {
            if (!data.results || data.results.length === 0) {
                showNoResults();
                return;
            }
            
            totalPages = data.totalPages;
            
            // Update results title
            document.getElementById('resultsTitle').textContent = 
                `Found ${data.total.toLocaleString()} images for "${currentQuery}"`;
            
            // Generate results grid
            const grid = document.getElementById('resultsGrid');
            grid.innerHTML = data.results.map(photo => `
                <div class="col-lg-3 col-md-4 col-sm-6">
                    <div class="card h-100">
                        <div class="position-relative">
                            <img src="${photo.urls.small}" class="card-img-top" alt="${photo.altDescription || photo.description}" style="height: 200px; object-fit: cover;">
                            <div class="position-absolute top-0 end-0 p-2">
                                <span class="badge bg-info">
                                    <i class="bi bi-heart"></i> ${photo.likes}
                                </span>
                            </div>
                            <div class="position-absolute bottom-0 start-0 end-0 p-2">
                                <button class="btn btn-primary btn-sm w-100" onclick="showSaveModal('${photo.id}', '${photo.urls.regular}', '${photo.description || photo.altDescription}', '${photo.user.name}', '${photo.user.links.html}', ${photo.width}, ${photo.height})">
                                    <i class="bi bi-download"></i> Save to Library
                                </button>
                            </div>
                        </div>
                        <div class="card-body">
                            <h6 class="card-title small">${photo.description || photo.altDescription || 'Untitled'}</h6>
                            <p class="card-text small text-muted">
                                by <a href="${photo.user.links.html}" target="_blank" class="text-decoration-none">${photo.user.name}</a>
                            </p>
                            <div class="d-flex justify-content-between small text-muted">
                                <span>${photo.width} × ${photo.height}</span>
                                <span><i class="bi bi-download"></i> ${photo.downloads}</span>
                            </div>
                        </div>
                    </div>
                </div>
            `).join('');
            
            // Generate pagination
            generatePagination();
            
            showElement('searchResults');
            hideElements(['noResults', 'errorMessage', 'initialState']);
        }

        // Show save modal
        function showSaveModal(photoId, imageUrl, description, photographer, photographerUrl, width, height) {
            document.getElementById('photoId').value = photoId;
            document.getElementById('modalImage').src = imageUrl;
            document.getElementById('imageTitle').value = '';
            document.getElementById('imageDescription').value = description || '';
            document.getElementById('photographerInfo').innerHTML = 
                `<a href="${photographerUrl}" target="_blank" class="text-decoration-none">${photographer}</a> on Unsplash`;
            document.getElementById('imageDetails').textContent = 
                `${width} × ${height} pixels`;
            
            new bootstrap.Modal(document.getElementById('saveImageModal')).show();
        }

        // Save image to library
        document.getElementById('saveImageBtn').addEventListener('click', async function() {
            const photoId = document.getElementById('photoId').value;
            const title = document.getElementById('imageTitle').value;
            const description = document.getElementById('imageDescription').value;
            
            this.disabled = true;
            this.innerHTML = '<i class="bi bi-hourglass-split"></i> Saving...';
            
            try {
                const response = await fetch('@Url.Action("SaveFromUnsplash")', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                    },
                    body: JSON.stringify({
                        PhotoId: photoId,
                        Title: title,
                        Description: description
                    })
                });
                
                const result = await response.json();
                
                if (result.success) {
                    bootstrap.Modal.getInstance(document.getElementById('saveImageModal')).hide();
                    showToast('Image saved to library successfully!', 'success');
                } else {
                    showToast(result.error || 'Failed to save image', 'danger');
                }
            } catch (error) {
                console.error('Save error:', error);
                showToast('Failed to save image', 'danger');
            } finally {
                this.disabled = false;
                this.innerHTML = '<i class="bi bi-download"></i> Save to Library';
            }
        });

        // Utility functions
        function showElement(id) {
            document.getElementById(id).classList.remove('d-none');
        }

        function hideElement(id) {
            document.getElementById(id).classList.add('d-none');
        }

        function hideElements(ids) {
            ids.forEach(hideElement);
        }

        function showNoResults() {
            showElement('noResults');
            hideElements(['searchResults', 'errorMessage', 'initialState']);
        }

        function showError() {
            showElement('errorMessage');
            hideElements(['searchResults', 'noResults', 'initialState']);
        }

        function searchSuggestion(term) {
            document.getElementById('searchTerm').value = term;
            searchUnsplash(term, 1);
        }

        function generatePagination() {
            const pagination = document.getElementById('pagination');
            let html = '';
            
            // Previous button
            html += `<li class="page-item ${currentPage === 1 ? 'disabled' : ''}">
                <a class="page-link" href="#" onclick="changePage(${currentPage - 1})">
                    <i class="bi bi-chevron-left"></i>
                </a>
            </li>`;
            
            // Page numbers (simplified)
            const startPage = Math.max(1, currentPage - 2);
            const endPage = Math.min(totalPages, currentPage + 2);
            
            for (let i = startPage; i <= endPage; i++) {
                html += `<li class="page-item ${i === currentPage ? 'active' : ''}">
                    <a class="page-link" href="#" onclick="changePage(${i})">${i}</a>
                </li>`;
            }
            
            // Next button
            html += `<li class="page-item ${currentPage === totalPages ? 'disabled' : ''}">
                <a class="page-link" href="#" onclick="changePage(${currentPage + 1})">
                    <i class="bi bi-chevron-right"></i>
                </a>
            </li>`;
            
            pagination.innerHTML = html;
        }

        function changePage(page) {
            if (page >= 1 && page <= totalPages && page !== currentPage) {
                searchUnsplash(currentQuery, page);
            }
        }

        function showToast(message, type) {
            // Simple toast implementation
            const toast = document.createElement('div');
            toast.className = `alert alert-${type} position-fixed top-0 end-0 m-3`;
            toast.style.zIndex = '1050';
            toast.innerHTML = `
                ${message}
                <button type="button" class="btn-close" onclick="this.parentElement.remove()"></button>
            `;
            document.body.appendChild(toast);
            
            setTimeout(() => {
                if (toast.parentElement) {
                    toast.remove();
                }
            }, 5000);
        }
    </script>
}
